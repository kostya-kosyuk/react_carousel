{"version":3,"sources":["components/Carousel.tsx","App.tsx","index.tsx"],"names":["Carousel","state","translate","prev","slide","next","direction","carousel","document","getElementById","symbol","this","props","images","ItemWidth","frameSize","step","infinite","maxRight","length","newTranslate","style","transform","setState","animationDuration","isPrevButtonDisabled","isNextButtonDisabled","imageStyle","width","frameStyle","listStyle","transitionDuration","className","id","map","imagePath","uniqueKey","slice","lastIndexOf","src","alt","classNames","type","onClick","React","Component","checkValueValid","value","min","max","App","handleItemWidth","event","Number","target","handleFrameSize","handleAnimationDuration","handleInfinite","checked","handleStep","name","defaultValue","onChange","ReactDOM","render"],"mappings":"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","file":"static/js/main.c7b1bdbe.chunk.js","sourcesContent":["import React, { CSSProperties } from 'react';\nimport './Carousel.scss';\nimport classNames from 'classnames';\n\ntype Props = {\n  images: string[],\n  ItemWidth: number,\n  frameSize: number,\n  step: number,\n  animationDuration: number;\n  infinite: boolean;\n};\n\ntype State = {\n  translate: number;\n};\n\nexport class Carousel extends React.Component<Props, State> {\n  state: Readonly<State> = {\n    translate: 0,\n  };\n\n  prev = () => {\n    this.slide('left');\n  };\n\n  next = () => {\n    this.slide('right');\n  };\n\n  slide(direction: 'left' | 'right') {\n    const carousel = document.getElementById('carousel');\n\n    const symbol = direction === 'right' ? -1 : 1;\n\n    const { translate } = this.state;\n    const {\n      images,\n      ItemWidth,\n      frameSize,\n      step,\n      infinite,\n    } = this.props;\n\n    const maxRight = ItemWidth * images.length\n      - ItemWidth * frameSize;\n\n    let newTranslate = translate + symbol * (ItemWidth * step);\n\n    if (!(carousel\n      && symbol === -1\n      ? newTranslate >= -maxRight\n      : newTranslate <= 0)) {\n      newTranslate = symbol === -1 ? -maxRight : 0;\n    }\n\n    if ((symbol === -1 ? translate === -maxRight : translate === 0)\n      && infinite) {\n      newTranslate = symbol === -1 ? 0 : -maxRight;\n    }\n\n    if (carousel) {\n      carousel.style.transform = `translateX(${newTranslate}px)`;\n    }\n\n    this.setState({ translate: newTranslate });\n  }\n\n  render() {\n    const {\n      ItemWidth,\n      frameSize,\n      animationDuration,\n      infinite,\n      images,\n    } = this.props;\n\n    const { translate } = this.state;\n\n    const maxRight = ItemWidth * images.length\n      - ItemWidth * frameSize;\n\n    const isPrevButtonDisabled = translate === 0 && !infinite;\n    const isNextButtonDisabled = translate === -maxRight && !infinite;\n\n    const imageStyle: CSSProperties = {\n      width: `${ItemWidth}px`,\n    };\n\n    const frameStyle: CSSProperties = {\n      width: `${ItemWidth * frameSize}px`,\n    };\n\n    const listStyle: CSSProperties = {\n      transitionDuration: `${animationDuration}ms`,\n    };\n\n    return (\n      <div className=\"Carousel\">\n        <div\n          className=\"Carousel__wrapper\"\n          style={frameStyle}\n        >\n          <ul\n            id=\"carousel\"\n            className=\"Carousel__list\"\n            style={listStyle}\n          >\n            {this.props.images.map(imagePath => {\n              const uniqueKey = imagePath.slice(\n                imagePath.lastIndexOf('/') + 1,\n                imagePath.lastIndexOf('.'),\n              );\n\n              return (\n                <li key={uniqueKey}>\n                  <img\n                    src={imagePath}\n                    alt={uniqueKey}\n                    style={imageStyle}\n                  />\n                </li>\n              );\n            })}\n          </ul>\n        </div>\n\n        <div className=\"buttons\">\n          <button\n            className={classNames(\n              'button',\n              isPrevButtonDisabled && 'disabled-button',\n            )}\n            type=\"button\"\n            onClick={this.prev}\n          >\n            ←\n          </button>\n          <button\n            data-cy=\"next\"\n            className={classNames(\n              'button',\n              isNextButtonDisabled && 'disabled-button',\n            )}\n            type=\"button\"\n            onClick={this.next}\n          >\n            →\n          </button>\n        </div>\n      </div>\n    );\n  }\n}\n","import React, { ChangeEvent } from 'react';\nimport './App.scss';\nimport { Carousel } from './components/Carousel';\n\nfunction checkValueValid(value: number, min: number, max: number): number {\n  if (value < min) {\n    return min;\n  }\n\n  if (value > max) {\n    return max;\n  }\n\n  return value;\n}\n\ninterface State {\n  images: string[];\n  ItemWidth: number;\n  frameSize: number;\n  step: number;\n  animationDuration: number;\n  infinite: boolean;\n}\n\nclass App extends React.Component<{}, State> {\n  state = {\n    images: [\n      './img/1.png',\n      './img/2.png',\n      './img/3.png',\n      './img/4.png',\n      './img/5.png',\n      './img/6.png',\n      './img/7.png',\n      './img/8.png',\n      './img/9.png',\n      './img/10.png',\n    ],\n    ItemWidth: 130,\n    frameSize: 3,\n    step: 3,\n    animationDuration: 1000,\n    infinite: false,\n  };\n\n  handleItemWidth = (event: ChangeEvent<HTMLInputElement>) => {\n    const min = 70;\n    const max = 500;\n\n    const ItemWidth = checkValueValid(\n      Number(event.target.value),\n      min,\n      max,\n    );\n\n    this.setState({ ItemWidth });\n  };\n\n  handleFrameSize = (event: ChangeEvent<HTMLInputElement>) => {\n    const min = 1;\n    const max = this.state.images.length;\n\n    const frameSize = checkValueValid(\n      Number(event.target.value),\n      min,\n      max,\n    );\n\n    this.setState({ frameSize });\n  };\n\n  handleAnimationDuration = (event: ChangeEvent<HTMLInputElement>) => {\n    const min = 100;\n    const max = 2000;\n\n    const animationDuration = checkValueValid(\n      Number(event.target.value),\n      min,\n      max,\n    );\n\n    this.setState({ animationDuration });\n  };\n\n  handleInfinite = (event: ChangeEvent<HTMLInputElement>) => {\n    this.setState({ infinite: event.target.checked });\n  };\n\n  handleStep = (event: ChangeEvent<HTMLInputElement>) => {\n    const min = 1;\n    const max = this.state.images.length;\n    const step = checkValueValid(Number(event.target.value), min, max);\n\n    this.setState({ step });\n  };\n\n  render() {\n    const {\n      images,\n      ItemWidth,\n      frameSize,\n      step,\n      animationDuration,\n      infinite,\n    } = this.state;\n\n    return (\n      <div className=\"App\">\n        <h1 data-cy=\"title\">{`Carousel with ${images.length} images`}</h1>\n        <div className=\"inputSettingsContainer\">\n\n          <label>\n            Item Width:\n            <input\n              type=\"number\"\n              name=\"itemWidth\"\n              id=\"ItemWidth\"\n              min=\"70\"\n              max=\"500\"\n              defaultValue={ItemWidth}\n              onChange={this.handleItemWidth}\n            />\n          </label>\n\n          <label>\n            Frame Size:\n            <input\n              type=\"number\"\n              name=\"frameSize\"\n              id=\"frameSize\"\n              min={1}\n              max={images.length}\n              defaultValue={frameSize}\n              onChange={this.handleFrameSize}\n            />\n          </label>\n\n          <label>\n            Step:\n            <input\n              type=\"number\"\n              name=\"step\"\n              id=\"step\"\n              min={1}\n              max={images.length}\n              defaultValue={step}\n              onChange={this.handleStep}\n            />\n          </label>\n\n          <label>\n            Animation Duration:\n            <input\n              type=\"number\"\n              name=\"animationDuration\"\n              id=\"animationDuration\"\n              min={100}\n              max={2000}\n              defaultValue={animationDuration}\n              onChange={this.handleAnimationDuration}\n            />\n          </label>\n\n          <label>\n            Infinite:\n            <input\n              type=\"checkbox\"\n              name=\"infinite\"\n              id=\"infinite\"\n              checked={infinite}\n              onChange={this.handleInfinite}\n            />\n          </label>\n        </div>\n        <Carousel\n          images={images}\n          ItemWidth={ItemWidth}\n          frameSize={frameSize}\n          step={step}\n          animationDuration={animationDuration}\n          infinite={infinite}\n        />\n      </div>\n    );\n  }\n}\n\nexport default App;\n","import ReactDOM from 'react-dom';\nimport App from './App';\n\nReactDOM.render(<App />, document.getElementById('root'));\n"],"sourceRoot":""}